services:
  order-service:
          image: order-image
          container_name: order-container
          build: .
          ports:
            - "8000:8000"
          networks:
                - app-network
          depends_on:
                data:
                    condition: service_healthy


  web:
    image: nginx
    container_name: nginx-container-order
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static/html:/static/html
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
        - order-service

  data:
    image: postgres
    restart: always
    container_name: postgresql-order-container
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    environment:
       POSTGRES_PASSWORD: ${database_password} 
       POSTGRES_DB: ${database_name}
       POSTGRES_USER: ${database_user}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${database_user}"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - app-network


networks:
      app-network:
            driver: bridge
  